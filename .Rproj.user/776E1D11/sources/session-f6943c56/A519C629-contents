######################## Housekeeping #######################

# Clear global environment.
rm(list=ls())

# Set working directory: 
# Session > Set Working Directory > To Source File Location
# Set variable name for the working directory
wd <- getwd()

# Assign paths to directories to .dir objects.

# All data should be in "data.dir", 
# while all output should be in "output.dir".
data.dir <- paste0(wd, "/DATA/")
output.dir <- paste0(wd, "/OUTPUT/")

######################## Housekeeping #######################

# Load libraries=============================================
library(vegan)
library(qiime2R)
library(dendextend)
library(cluster)
library(dplyr)
library(corrplot)
library(ggpubr)
library(Hmisc)

# Load .qza data and metadata=================================
metadata <- read.table(
  file = paste0(data.dir, "metadata-day-2.csv"),
  sep = ",", 
  header = TRUE,
  row.names = 1
)

otu.data <- read_qza(paste0(data.dir, "OTU-table-nometaz.qza"))
otu <- otu.data$data
otu.trans <- as.data.frame(t(as.matrix(otu))) # Transpositioning
merged <- merge(metadata, otu.trans, by = 0, all = TRUE) 
merged1 <- merged[,-1:-12] # Remove envi data and others
rownames(merged1) <- merged[,2] # Change rownames

# Compute for Euclidean distance=============================
# Standardize data by scaling to zero mean and
# unit variance
otu.bc <- vegdist(merged1, "bray")

# Make dendrogram plots=====================================
# Use different clustering methods and compare
par(mfrow = c(2,2)) # for 2x2 plots

# Single linkage
otu.bc.sing <- hclust(otu.bc, method = "single")
dend <- as.dendrogram(otu.bc.sing)
dend %>% set("labels_cex", 0.8) %>%
  plot(cex = 0.8,
       cex.axis = 0.8,
       cex.lab = 0.9,
       horiz = FALSE)
title(main = "Single linkage", line = 0.5)

# Complete linkage
otu.bc.comp <- hclust(otu.bc, method = "complete")
dend <- as.dendrogram(otu.bc.comp)
dend %>% set("labels_cex", 0.8) %>%
  plot(cex = 0.8,
       cex.axis = 0.8,
       cex.lab = 0.9,
       horiz = FALSE)
title(main = "Complete linkage", line = 0.5)

# UPGMA
otu.bc.upgma <- hclust(otu.bc, method = "average")
dend <- as.dendrogram(otu.bc.upgma)
dend %>% set("labels_cex", 0.8) %>%
  plot(cex = 0.8,
       cex.axis = 0.8,
       cex.lab = 0.9,
       horiz = FALSE)
title(main = "UPGMA", line = 0.5)

# Ward
otu.bc.ward <- hclust(otu.bc, method = "ward.D2")
dend <- as.dendrogram(otu.bc.ward)
dend %>% set("labels_cex", 0.8) %>%
  plot(cex = 0.8,
       cex.axis = 0.8,
       cex.lab = 0.9,
       horiz = FALSE)
title(main = "Ward", line = 0.5)

# ==========================================================
# Picking the method that retains most of
# the information contained in the
# dissimilarity matrix using the cophenetic
# correlation

# Single linkage clustering
otu.bc.sing.coph <- cophenetic(otu.bc.sing)
cor(otu.bc, otu.bc.sing.coph)
# Complete linkage clustering
otu.bc.comp.coph <- cophenetic(otu.bc.comp)
cor(otu.bc, otu.bc.comp.coph)
# Average clustering
otu.bc.upgma.coph <- cophenetic(otu.bc.upgma)
cor(otu.bc, otu.bc.upgma.coph)
# Ward clustering
otu.bc.ward.coph <- cophenetic(otu.bc.ward)
cor(otu.bc, otu.bc.ward.coph)

# Plotting cophenetic correlation in 
# Shephard-like diagrams
par(mfrow = c(2,2))
plot(
  otu.bc,
  otu.bc.sing.coph,
  xlab = "Bray-Curtis dissimilarity",
  ylab = "Cophenetic distance",
  asp = 1,
  xlim = c(0, 1),
  ylim = c(0, 1),
  main = c("Single linkage", 
    paste("Cophenetic correlation =", round(cor(otu.bc,
      otu.bc.sing.coph), 3)))
)
abline(0, 1)
lines(lowess(otu.bc, otu.bc.sing.coph), 
      col = "red")

plot(
  otu.bc,
  otu.bc.comp.coph,
  xlab = "Bray-Curtis dissimilarity",
  ylab = "Cophenetic distance",
  asp = 1,
  xlim = c(0, 1),
  ylim = c(0, 1),
  main = c("Complete linkage", 
    paste("Cophenetic correlation =",
      round(cor(otu.bc, otu.bc.comp.coph), 3)))
)
abline(0, 1)
lines(lowess(otu.bc, otu.bc.comp.coph), 
      col = "red")

plot(
  otu.bc,
  otu.bc.upgma.coph,
  xlab = "Bray-Curtis dissimilarity",
  ylab = "Cophenetic distance",
  asp = 1,
  xlim = c(0, 1),
  ylim = c(0, 1),
  main = c("UPGMA", 
    paste("Cophenetic correlation =",
      round(cor(otu.bc, otu.bc.upgma.coph), 3)))
)
abline(0, 1)
lines(lowess(otu.bc, otu.bc.upgma.coph), 
      col = "red")

plot(
  otu.bc,
  otu.bc.ward.coph,
  xlab = "Bray-Curtis dissimilarity",
  ylab = "Cophenetic distance",
  asp = 1,
  xlim = c(0, 1),
  ylim = c(0, 1),
  main = c("Ward", 
    paste("Cophenetic correlation =",
      round(cor(otu.bc, otu.bc.ward.coph), 3)))
)
abline(0, 1)
lines(lowess(otu.bc, otu.bc.ward.coph), 
      col = "red")

# Gower (1983) distance
(gow.dist.single <- sum((otu.bc - otu.bc.sing.coph) ^ 2))
(gow.dist.comp <- sum((otu.bc - otu.bc.comp.coph) ^ 2))
(gow.dist.UPGMA <- sum((otu.bc - otu.bc.upgma.coph) ^ 2))
(gow.dist.ward <- sum((otu.bc - otu.bc.ward.coph) ^ 2))

# Average Silhouette Widths=================================
# Silhouette width - measure of the degree of
# membership of an object to its cluster based on
# dissimilarity between this object and all
# objects of the cluster to which it belongs. The
# larger the value, the better the object is
# clustered

# Choose and rename the dendrogram ("hclust"
# object)
hc <- otu.bc.upgma

# Plot average silhouette widths (using UPGMA)
# for all partitions except for the trivial partitions 
# (k =1 or k = n)
Si <- numeric(nrow(merged1))
for (k in 2:(nrow(merged1) - 1))
{
  sil <- silhouette(cutree(hc, k = k), otu.bc)
  Si[k] <- summary(sil)$avg.width
}
k.best <- which.max(Si)
plot(
  1:nrow(merged1),
  Si,
  type = "h",
  main = "Silhouette-optimal number of clusters",
  xlab = "k (number of clusters)",
  ylab = "Average silhouette width"
)
axis(
  1,
  k.best,
  paste("optimum", k.best, sep = "\n"),
  col = "red",
  font = 2,
  col.axis = "red"
)
points(k.best,
       max(Si),
       pch = 16,
       col = "red",
       cex = 1.5)